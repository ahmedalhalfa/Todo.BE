name: CI/CD Pipeline

on:
  push:
    branches: [ master ]

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          
      - name: Create package-lock for audit
        run: npm i --package-lock-only
          
      - name: Run security audit
        run: npm audit

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    services:
      # MongoDB service container
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
      
      # Redis service container
      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Lint
      run: pnpm lint

    - name: Setup test environment variables
      run: |
        echo "MONGODB_URI=mongodb://localhost:27017/test" >> $GITHUB_ENV
        echo "REDIS_HOST=localhost" >> $GITHUB_ENV
        echo "REDIS_PORT=6379" >> $GITHUB_ENV
        echo "REDIS_PASSWORD=" >> $GITHUB_ENV
        echo "REDIS_USERNAME=" >> $GITHUB_ENV
        echo "REDIS_TLS=false" >> $GITHUB_ENV

    - name: Run unit tests
      run: pnpm test

    - name: Run e2e tests
      run: pnpm test:e2e
      
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/ 
